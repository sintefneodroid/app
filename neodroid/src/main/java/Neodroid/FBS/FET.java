// automatically generated by the FlatBuffers compiler, do not modify

package Neodroid.FBS;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class FET extends Table {
  public static FET getRootAsFET(ByteBuffer _bb) {
    return getRootAsFET(_bb, new FET());
  }

  public static FET getRootAsFET(ByteBuffer _bb, FET obj) {
    _bb.order(ByteOrder.LITTLE_ENDIAN);
    return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
  }

  public FET __assign(int _i, ByteBuffer _bb) {
    __init(_i, _bb);
    return this;
  }

  public void __init(int _i, ByteBuffer _bb) {
    bb_pos = _i;
    bb = _bb;
  }

  public static void startFET(FlatBufferBuilder builder) {
    builder.startObject(1);
  }

  public static void addTransform(FlatBufferBuilder builder, int transformOffset) {
    builder.addStruct(0, transformOffset, 0);
  }

  public static int endFET(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // transform
    return o;
  }

  public FEulerTransform transform() {
    return transform(new FEulerTransform());
  }

  public FEulerTransform transform(FEulerTransform obj) {
    int o = __offset(4);
    return o != 0 ? obj.__assign(o + bb_pos, bb) : null;
  }
}

